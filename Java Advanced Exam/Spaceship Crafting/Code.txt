package spaceshipCrafting;

import java.util.*;
import java.util.stream.Collectors;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<Integer> liquids = Arrays.stream(scanner.nextLine().split("\\s+")).map(Integer::parseInt).collect(Collectors.toList());
        List<Integer> items = Arrays.stream(scanner.nextLine().split("\\s+")).map(Integer::parseInt).collect(Collectors.toList());

        Map<String, Integer> collectElement = new TreeMap<>();
        collectElement.put("Glass", 0);
        collectElement.put("Aluminium", 0);
        collectElement.put("Lithium", 0);
        collectElement.put("Carbon fiber", 0);

        int sum = 0;
        String element = "";
        while (liquids.size() > 0 || items.size() > 0) {
            for (int i = 0; i < liquids.size(); i++) {
                for (int k = items.size() - 1; k >= 0; k--) {
                    sum = liquids.get(i) + items.get(k);
                    if (sum == 25) {
                        element = "Glass";
                        collectElement.put(element, collectElement.get(element) + 1);
                        liquids.remove(liquids.get(i));
                        items.remove(items.get(k));
                        i--;
                        break;
                    } else if (sum == 50) {
                        element = "Aluminium";
                        collectElement.put(element, collectElement.get(element) + 1);
                        liquids.remove(liquids.get(i));
                        items.remove(items.get(k));
                        i--;
                        break;
                    } else if (sum == 75) {
                        element = "Lithium";
                        collectElement.put(element, collectElement.get(element) + 1);
                        liquids.remove(liquids.get(i));
                        items.remove(items.get(k));
                        i--;
                        break;
                    } else if (sum == 100) {
                        element = "Carbon fiber";
                        collectElement.put(element, collectElement.get(element) + 1);
                        liquids.remove(liquids.get(i));
                        items.remove(items.get(k));
                        i--;
                        break;
                    } else {
                        liquids.remove(liquids.get(i));
                        items.set(k, items.get(k) + 3);
                        i--;
                        break;
                    }
                }
            }
            break;
        }
        boolean checker = false;

        for (Map.Entry<String, Integer> entry : collectElement.entrySet()) {
            if (entry.getValue() == 0) {
                System.out.println("Ugh, what a pity! You didn't have enough materials to build the spaceship.");
                checker = true;
                break;
            }
        }
        if (checker == false) {
            System.out.println("Wohoo! You succeeded in building the spaceship!");
        }
        System.out.print("Liquids left: ");
        if (liquids.isEmpty()) {
            System.out.println("none");
        } else {
            for (int i = liquids.size() - 1; i >= 0; i--) {
                if (i == 0) {
                    System.out.println(liquids.get(i));
                } else {
                    System.out.print(liquids.get(i) + ", ");
                }
            }
        }
        System.out.print("Physical items left: ");
        if (items.isEmpty()) {
            System.out.println("none");
        } else {
            for (int i = items.size() - 1; i >= 0; i--) {
                if (i == 0) {
                    System.out.println(items.get(i));
                } else {
                    System.out.print(items.get(i) + ", ");
                }
            }
        }
        for (Map.Entry<String, Integer> mentry : collectElement.entrySet()) {
            System.out.println(mentry.getKey() + ": " + mentry.getValue());
        }
    }
}

